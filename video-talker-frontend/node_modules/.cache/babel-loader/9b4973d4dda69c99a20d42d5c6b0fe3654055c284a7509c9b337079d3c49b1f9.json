{"ast":null,"code":"import store from '../../store/store';\nimport { setLocalStream } from '../../store/actions/callActions';\nconst defaultConstraints = {\n  video: true,\n  audio: true\n};\nexport const getLocalStream = () => {\n  navigator.mediaDevices.getUserMedia(defaultConstraints).then(stream => {\n    store.dispatch(setLocalStream(stream));\n    store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n  }).catch(err => {\n    console.log('error occured when trying to get an access to get local stream');\n    console.log(err);\n  });\n};","map":{"version":3,"names":["store","setLocalStream","defaultConstraints","video","audio","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","dispatch","setCallState","callStates","CALL_AVAILABLE","catch","err","console","log"],"sources":["D:/videotalker/video-talker-frontend/src/utils/webRTC/webRTCHandler.js"],"sourcesContent":["\r\nimport store from '../../store/store';\r\nimport { setLocalStream } from '../../store/actions/callActions';\r\n\r\nconst defaultConstraints = {\r\n    video: true,\r\n    audio: true\r\n};\r\nexport const getLocalStream = () => {\r\n    navigator.mediaDevices.getUserMedia(defaultConstraints)\r\n        .then(stream => {\r\n            store.dispatch(setLocalStream(stream));\r\n            store.dispatch(setCallState(callStates.CALL_AVAILABLE));\r\n        })\r\n        .catch(err => {\r\n            console.log('error occured when trying to get an access to get local stream');\r\n            console.log(err);\r\n        });\r\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,SAASC,cAAc,QAAQ,iCAAiC;AAEhE,MAAMC,kBAAkB,GAAG;EACvBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACX,CAAC;AACD,OAAO,MAAMC,cAAc,GAAG,MAAM;EAChCC,SAAS,CAACC,YAAY,CAACC,YAAY,CAACN,kBAAkB,CAAC,CAClDO,IAAI,CAACC,MAAM,IAAI;IACZV,KAAK,CAACW,QAAQ,CAACV,cAAc,CAACS,MAAM,CAAC,CAAC;IACtCV,KAAK,CAACW,QAAQ,CAACC,YAAY,CAACC,UAAU,CAACC,cAAc,CAAC,CAAC;EAC3D,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;IACVC,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;IAC7ED,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB,CAAC,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}