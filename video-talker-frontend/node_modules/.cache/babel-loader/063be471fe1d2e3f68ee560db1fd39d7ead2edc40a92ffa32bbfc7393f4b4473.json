{"ast":null,"code":"import socketClient from 'socket.io-client';\nimport store from '../../store/store';\nimport * as dashboardActions from '../../store/actions/dashboardActions';\nimport * as webRTCHandler from '../webRTC/webRTCHandler';\nconst SERVER = 'http://localhost:5000';\nconst broadcastEventTypes = {\n  ACTIVE_USERS: 'ACTIVE_USERS',\n  GROUP_CALL_ROOMS: 'GROUP_CALL_ROOMS'\n};\nlet socket;\nexport const connectWithWebSocket = () => {\n  socket = socketClient(SERVER);\n  socket.on('connection', () => {\n    console.log('SUCCESSFULLY CONNECTED WİTH WSS SERVER');\n    console.log(socket.id);\n  });\n  socket.on('broadcast', data => {\n    handleBroadcastEvents(data);\n  });\n  socket.on('pre-offer', data => {\n    webRTCHandler.handlePreOffer(data);\n  });\n};\nexport const registerNewUser = username => {\n  socket.emit('register-new-user', {\n    username: username,\n    socketId: socket.id\n  });\n};\n\n// emitting events to server related with direct call\nexport const sendPreOffer = data => {\n  socket.emit('pre-offer', data);\n};\nconst handleBroadcastEvents = data => {\n  switch (data.event) {\n    case broadcastEventTypes.ACTIVE_USERS:\n      const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\n      store.dispatch(dashboardActions.setActiveUsers(activeUsers));\n      break;\n    default:\n      break;\n  }\n};","map":{"version":3,"names":["socketClient","store","dashboardActions","webRTCHandler","SERVER","broadcastEventTypes","ACTIVE_USERS","GROUP_CALL_ROOMS","socket","connectWithWebSocket","on","console","log","id","data","handleBroadcastEvents","handlePreOffer","registerNewUser","username","emit","socketId","sendPreOffer","event","activeUsers","filter","activeUser","dispatch","setActiveUsers"],"sources":["D:/videotalker/video-talker-frontend/src/utils/wssConnection/wssConnection.js"],"sourcesContent":["import socketClient from 'socket.io-client';\r\nimport store from '../../store/store';\r\nimport * as dashboardActions from '../../store/actions/dashboardActions';\r\nimport * as webRTCHandler from '../webRTC/webRTCHandler';\r\n\r\n\r\nconst SERVER = 'http://localhost:5000';\r\n\r\nconst broadcastEventTypes = {\r\n    ACTIVE_USERS: 'ACTIVE_USERS',\r\n    GROUP_CALL_ROOMS: 'GROUP_CALL_ROOMS'\r\n}\r\n\r\nlet socket;\r\nexport const connectWithWebSocket = () => {\r\n    socket = socketClient(SERVER);\r\n    socket.on('connection', () => {\r\n        console.log('SUCCESSFULLY CONNECTED WİTH WSS SERVER');\r\n        console.log(socket.id);\r\n    });\r\n\r\n    socket.on('broadcast', (data) => {\r\n        handleBroadcastEvents(data)\r\n    })\r\n\r\n    socket.on('pre-offer',(data)=>{\r\n        webRTCHandler.handlePreOffer(data);\r\n    })\r\n};\r\n\r\n\r\nexport const registerNewUser = (username) => {\r\n    socket.emit('register-new-user', {\r\n        username: username,\r\n        socketId: socket.id\r\n    })\r\n};\r\n\r\n// emitting events to server related with direct call\r\nexport const sendPreOffer=(data)=>{\r\n    socket.emit('pre-offer',data);\r\n}\r\n\r\nconst handleBroadcastEvents = (data) => {\r\n    switch (data.event) {\r\n        case broadcastEventTypes.ACTIVE_USERS:\r\n            const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\r\n            store.dispatch(dashboardActions.setActiveUsers(activeUsers));\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAO,KAAKC,gBAAgB,MAAM,sCAAsC;AACxE,OAAO,KAAKC,aAAa,MAAM,yBAAyB;AAGxD,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,MAAMC,mBAAmB,GAAG;EACxBC,YAAY,EAAE,cAAc;EAC5BC,gBAAgB,EAAE;AACtB,CAAC;AAED,IAAIC,MAAM;AACV,OAAO,MAAMC,oBAAoB,GAAG,MAAM;EACtCD,MAAM,GAAGR,YAAY,CAACI,MAAM,CAAC;EAC7BI,MAAM,CAACE,EAAE,CAAC,YAAY,EAAE,MAAM;IAC1BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrDD,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACK,EAAE,CAAC;EAC1B,CAAC,CAAC;EAEFL,MAAM,CAACE,EAAE,CAAC,WAAW,EAAGI,IAAI,IAAK;IAC7BC,qBAAqB,CAACD,IAAI,CAAC;EAC/B,CAAC,CAAC;EAEFN,MAAM,CAACE,EAAE,CAAC,WAAW,EAAEI,IAAI,IAAG;IAC1BX,aAAa,CAACa,cAAc,CAACF,IAAI,CAAC;EACtC,CAAC,CAAC;AACN,CAAC;AAGD,OAAO,MAAMG,eAAe,GAAIC,QAAQ,IAAK;EACzCV,MAAM,CAACW,IAAI,CAAC,mBAAmB,EAAE;IAC7BD,QAAQ,EAAEA,QAAQ;IAClBE,QAAQ,EAAEZ,MAAM,CAACK;EACrB,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMQ,YAAY,GAAEP,IAAI,IAAG;EAC9BN,MAAM,CAACW,IAAI,CAAC,WAAW,EAACL,IAAI,CAAC;AACjC,CAAC;AAED,MAAMC,qBAAqB,GAAID,IAAI,IAAK;EACpC,QAAQA,IAAI,CAACQ,KAAK;IACd,KAAKjB,mBAAmB,CAACC,YAAY;MACjC,MAAMiB,WAAW,GAAGT,IAAI,CAACS,WAAW,CAACC,MAAM,CAACC,UAAU,IAAIA,UAAU,CAACL,QAAQ,KAAKZ,MAAM,CAACK,EAAE,CAAC;MAC5FZ,KAAK,CAACyB,QAAQ,CAACxB,gBAAgB,CAACyB,cAAc,CAACJ,WAAW,CAAC,CAAC;MAC5D;IACJ;MACI;EAAM;AAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}